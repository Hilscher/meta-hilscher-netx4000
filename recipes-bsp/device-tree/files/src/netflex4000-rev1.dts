/*
* (C) Copyright 2018 Hilscher Gesellschaft fuer Systemautomation mbH
* http://www.hilscher.com
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License as
* published by the Free Software Foundation; version 2 of
* the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*/

/dts-v1/;

#include "netx4000-common.dtsi"

/ {
	model = "netflex4000-rev1";
	compatible = "hilscher,netx4000";

	chosen {
		linux,stdout-path = &uart0;
	};

	memory {
		device_type = "memory";
		reg = <0x0 0x0>; /* will be filled by bootloader */
	};

	leds {
		compatible = "gpio-leds";
		led0_green {
			gpios = <&gpio3 10 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		led0_red {
			gpios = <&gpio3 11 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		led1_green {
			gpios = <&gpio3 12 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		led1_red {
			gpios = <&gpio3 13 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		led_lte_red {
			gpios = <&gpio3 2 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		apl_green {
			gpios = <&gpio3 6 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		apl_red {
			gpios = <&gpio3 7 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
		};
		act_green {
			gpios = <&gpio3 8 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
		act_red {
			gpios = <&gpio3 9 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "none";
			default-state = "off";
			panic-indicator;
		};
	};
};

/* Static platform gpio pins */
&pinctrl {
	pinctrl-single,gpio-range0 = <
//		MUX_PIN(5,9)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_PULLUP50K) // mmio41 / gpio2.9  / nSPI0_CS
		&range (MUX_PIN(5,9)/4) 1 (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_PULLUP50K)

//		MUX_PIN(12,0)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.0  / LTE_RESET
//		MUX_PIN(12,1)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.1  / LTE_FLIGHT_MODE
//		MUX_PIN(12,2)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.2  / LTE_LED_RED
//		MUX_PIN(12,3)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.3  / IN0
//		MUX_PIN(12,4)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.4  / IN1
//		MUX_PIN(12,5)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.5  / OUT
//		MUX_PIN(12,6)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.6  / GBIT_APL_GREEN
//		MUX_PIN(12,7)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.7  / GBIT_APL_RED
//		MUX_PIN(12,8)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.8  / GBIT_ACT_GREEN
//		MUX_PIN(12,9)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.9  / GBIT_ACT_RED
//		MUX_PIN(12,10) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.10 / LED0_GREEN
//		MUX_PIN(12,11) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.11 / LED0_RED
//		MUX_PIN(12,12) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.12 / LED1_GREEN
//		MUX_PIN(12,13) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.13 / LED1_RED
//		MUX_PIN(12,14) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.14 / nGBIT_RESET
//		MUX_PIN(12,15) (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.15 / ESP32_EN
//		MUX_PIN(13,0)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.16 / ESP32_GPIO0
//		MUX_PIN(13,5)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.21 / nTPM_INT
//		MUX_PIN(13,6)  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)        // no mmio / gpio3.22 / nUART2_RTS
		&range (MUX_PIN(12,0)/4) 16 (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)
		&range (MUX_PIN(13,0)/4) 1  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)
		&range (MUX_PIN(13,5)/4) 2  (REEMUX_1 | REEMUX_DRV_08MA | REEMUX_UDC_NONE)
	>;
};

&gpio3 {
	gpio-line-names = "LTE_RESET",
			  "LTE_FLIGHT_MODE",
			  "LTE_LED_RED",
			  "IN0",
			  "IN1",
			  "OUT",
			  "GBIT_APL_GREEN",
			  "GBIT_APL_RED",
			  "GBIT_ACT_GREEN",
			  "GBIT_ACT_RED",
			  "LED0_GREEN",
			  "LED0_RED",
			  "LED1_GREEN",
			  "LED1_RED",
			  "nGBIT_RESET",
			  "ESP32_EN",
			  "ESP32_GPIO0",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "nTPM_INT",
			  "nUART2_RTS",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C",
			  "N/C";
};

&sdmmc0 {
	status = "ok";
};

&rtc0 {
	status = "ok";
};

/* Serial console */
&uart0 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
};

/* ESP32 Bluetooth */
&uart1 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
};

&uart2 {
	status = "ok";
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins_noflow>;
	rs485-txen-gpio = <&gpio3 22 GPIO_ACTIVE_LOW>;
};

/* ESP32 WiFi (SPI) */
&spi0 {
	status = "ok";
	num-cs = <1>;
	cs-gpios = <&gpio2 9 GPIO_ACTIVE_LOW>;
	#address-cells = <1>;
	#size-cells = <0>;
	spidev@0 {
		compatible = "spidev";
		reg = <0x0>;
		spi-max-frequency = <25000000>;
	};
};

&can0 {
	status = "ok";
	channels = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&can0_0_pins>;
};

&hcd0 {
	status = "ok";
	num-ports = <2>;
	pinctrl-names = "default";
	pinctrl-0 = <&hcd0_0_pins &hcd0_1_pins>;
};

&mdio0 {
	status = "ok";
	reset-gpio = <&gpio3 14 GPIO_ACTIVE_LOW>;
};

&gmac0 {
	status = "ok";
};

&gmac1 {
	status = "ok";
};

&i2c4 {
	status = "ok";

	tpm@20 {
		compatible = "infineon,slb9645tt";
		reg = <0x20>;
        };
};

&idpm0 {
	status = "ok";
};

&adc0 {
	status = "ok";
};

&adc1 {
	status = "ok";
};

&pcie_rc {
	status = "ok";
	max-link-speed = <1>;
};
